name: Image-scan

on:
  push:
    branches:
      - master # Trigger the workflow on push to the master branch

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-scan:
    
    name: Deploy to Staging
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Use your preferred Python version

    - name: Install AWS CLI
      run: |
        pip install awscli --upgrade --user  

    - name: Set up docker build prereqs (QEMU)
      uses: docker/setup-qemu-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.STG_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.STG_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag image 
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: calendar-service
        IMAGE_SHA: ${{ github.sha }} 
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA"  

    - name: Scan Docker Image with AWS Inspector
      id: inspector
      uses: aws-actions/vulnerability-scan-github-action-for-amazon-inspector@v1.1.1
      with:
        artifact_type: 'container'
        artifact_path: ${{ steps.login-ecr.outputs.registry }}/calendar-service:${{ github.sha }}
        display_vulnerability_findings: "enabled"

    - name: Upload Inspector scan results as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Inspector Vulnerability Scan Artifacts
        path: |
          ${{ steps.inspector.outputs.inspector_scan_results }}
          ${{ steps.inspector.outputs.inspector_scan_results_csv }}
          ${{ steps.inspector.outputs.artifact_sbom }}
          ${{ steps.inspector.outputs.inspector_scan_results_markdown }}

    - name: Check vulnerability threshold
      id: check-threshold
      run: | 
            echo "Newly Build docker images failed the threshold values: Start cleaup"
            aws ecr batch-delete-image --repository-name calendar-service --image-ids imageTag=${{ github.sha }}
            aws ecr batch-delete-image --repository-name calendar-service --image-ids imageTag=latest
